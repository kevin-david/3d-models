name: Convert STEP to STL

on:
  push:
    paths:
      - '**/*.step'
      - '**/*.stp'
  pull_request:
    paths:
      - '**/*.step'
      - '**/*.stp'

env:
  # Mesh quality settings for STL conversion
  LINEAR_DEFLECTION: 0.002      # Surface accuracy in mm (lower = higher quality)
  ANGULAR_DEFLECTION: 0.174533  # Angle in radians (10 degrees, lower = smoother curves)
  
  # FreeCAD installation method
  FREECAD_METHOD: snap
  
  # Git commit settings
  COMMIT_MESSAGE: "Auto-generate STL files from STEP files [skip ci]"
  BOT_NAME: "github-actions[bot]"
  BOT_EMAIL: "github-actions[bot]@users.noreply.github.com"

jobs:
  convert:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Get changed STEP files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            **/*.step
            **/*.stp
      
      - name: Install FreeCAD via snap
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          # Install FreeCAD via snap (fast and reliable)
          sudo snap install freecad
          
          # Verify installation
          freecad --version
      
      - name: Convert STEP to STL
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          LINEAR_DEFLECTION: ${{ env.LINEAR_DEFLECTION }}
          ANGULAR_DEFLECTION: ${{ env.ANGULAR_DEFLECTION }}
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "Processing: $file"
            freecad -c .github/workflows/convert_step_to_stl.py "$file"
          done
      
      - name: Commit and push STL files
        if: steps.changed-files.outputs.any_changed == 'true' && github.event_name == 'push'
        run: |
          git config user.name "${{ env.BOT_NAME }}"
          git config user.email "${{ env.BOT_EMAIL }}"
          git add **/*.stl
          git diff --staged --quiet || git commit -m "${{ env.COMMIT_MESSAGE }}"
          git push

